@page "/fetchdata"

@using Väderdata.Data
@inject WeatherQueries query;

<h2>Enter date</h2>

<EditForm Model=@dateView OnSubmit=@DateSubmitted>
    <InputDate @bind-Value=dateView.Date ParsingErrorMessage="Must be a date" />
    <br />
    <input type="submit" value="Submit" class="btn btn-primary" />
</EditForm>

<button @onclick=ToggleButton class="btn btn-primary">@toggleLocation</button>
<h2>Aggregate for the day</h2>
<table class="table">
    <thead>
        <tr>

            <th>Date</th>
            <th>Temperature</th>
            <th>Humidity</th>
            <th>Mould Risk</th>
            <th>Location</th>
            <th>Season</th>
        </tr>
    </thead>
    <tbody>

        <tr>
            @if (dateView != null && dateView.WeatherList.Any())
            {
                <td>@dateView.Date.ToShortDateString()</td>
                <td>@String.Format("{0:#,##0.00}", dateView.AverageTemperature)</td>
                <td>@String.Format("{0:#,##0.00}", dateView.AverageHumidity)</td>
                <td>@String.Format("{0:#,##0.00}", dateView.MouldRisk)</td>
                <td>@dateView.Location</td>
                <td>@dateView.Season</td>
            }
            else
            {
                <td>Not Found</td>
            }
        </tr>
    </tbody>

</table>

@if (dateView != null)
{
    <h2>Measurements for @dateView.Date.ToShortDateString()</h2>
}
<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Location</th>
            <th>Temperature</th>
            <th>Humidity</th>
        </tr>
    </thead>
    <tbody>
        @if (dateView != null)
            @if (dateView.WeatherList.Any())
            {
                @foreach (var m in dateView.WeatherList)
                {
                    <tr>

                        <td>@m.Date</td>
                        <td>@m.Location</td>
                        <td>@m.Temperature</td>
                        <td>@m.Humidity</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td>Not Found</td>
                </tr>
            }
    </tbody>
</table>

@code {

    WeatherView dateView = new WeatherView() { Location = "Ute", WeatherList = new List<Weather>() };
    string toggleLocation = "Outdoor";

    void ToggleButton()
    {
        if (dateView.Location == "Inne")
        {
            toggleLocation = "Outdoor";
            dateView.Location = "Ute";
        }
        else
        {
            toggleLocation = "Indoor";
            dateView.Location = "Inne";
        }
    }

    async Task DateSubmitted()
    {

        dateView = await Task.Run(() => query.GetStatFromDate(dateView));
        if (dateView != null)
        {
            dateView.WeatherList = await Task.Run(() => query.GetRecordsFromDate(dateView));
        }
        else
        {
            dateView = new WeatherView();
            dateView.WeatherList = new List<Weather>();
            dateView.Location = "Ute";
            toggleLocation = "Outdoor";

        }
        this.StateHasChanged();
    }

}


