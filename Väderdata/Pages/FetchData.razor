@page "/fetchdata"

@using Väderdata.Data
@using Väderdata.Services;
@inject WeatherContext context;

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<EditForm Model=@test OnSubmit=@DateSubmitted>
    <InputDate @bind-Value=test.Date ParsingErrorMessage="Must be a date" />
    <br />
    <input type="submit" value="Submit" class="btn btn-primary" />
</EditForm>

        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Location</th>
                    <th>Temperature</th>
                    <th>Humidity</th>
                </tr>
            </thead>
            <tbody>
                @if (test.weatherData != null)
                {
                @foreach (var m in test.weatherData)
                {
                <tr>
                    <td>@m.Date</td>
                    <td>@m.Location</td>
                    <td>@m.Temperature</td>
                    <td>@m.Humidity</td>
                </tr>
                }
                }
            </tbody>
        </table>

        @code {

            model test = new model();
            class model
            {
                public DateTime Date { get; set; }
                public List<Weather> weatherData;
            }

            async Task DateSubmitted()
            {

                test.weatherData = await Task.Run(()=>context.GetRecordsFromDate(test.Date));

            }

            protected override async Task OnInitializedAsync()
            {

            }
        }

