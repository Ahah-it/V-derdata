// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Väderdata.Data;

namespace Väderdata.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20210120032220_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Väderdata.Data.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<int?>("WeatherViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeatherViewId");

                    b.ToTable("WeatherData");
                });

            modelBuilder.Entity("Väderdata.Data.WeatherView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("AverageHumidity")
                        .HasColumnType("float");

                    b.Property<double>("AverageTemperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MouldRisk")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WeatherViewData");
                });

            modelBuilder.Entity("Väderdata.Data.Weather", b =>
                {
                    b.HasOne("Väderdata.Data.WeatherView", "WeatherView")
                        .WithMany("WeatherList")
                        .HasForeignKey("WeatherViewId");

                    b.Navigation("WeatherView");
                });

            modelBuilder.Entity("Väderdata.Data.WeatherView", b =>
                {
                    b.Navigation("WeatherList");
                });
#pragma warning restore 612, 618
        }
    }
}
